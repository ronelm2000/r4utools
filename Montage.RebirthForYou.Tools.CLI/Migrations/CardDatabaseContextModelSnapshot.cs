// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Montage.RebirthForYou.Tools.CLI.Entities;

namespace Montage.RebirthForYou.Tools.CLI.Migrations
{
    [DbContext(typeof(CardDatabaseContext))]
    partial class CardDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Montage.RebirthForYou.Tools.CLI.Entities.ActivityLog", b =>
                {
                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Activity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Target")
                        .HasColumnType("TEXT");

                    b.HasKey("LogID");

                    b.ToTable("MigrationLog");
                });

            modelBuilder.Entity("Montage.RebirthForYou.Tools.CLI.Entities.R4UCard", b =>
                {
                    b.Property<string>("Serial")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ATK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Color")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DEF")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Effect")
                        .HasColumnType("TEXT");

                    b.Property<string>("Flavor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Images")
                        .HasColumnType("TEXT");

                    b.Property<int>("Language")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NonFoilSerial")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rarity")
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SetReleaseID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Serial")
                        .HasName("Serial");

                    b.HasIndex("NonFoilSerial");

                    b.HasIndex("SetReleaseID");

                    b.ToTable("R4UCards");
                });

            modelBuilder.Entity("R4UReleaseSet", b =>
                {
                    b.Property<int>("ReleaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseCode")
                        .HasColumnType("TEXT");

                    b.HasKey("ReleaseID");

                    b.ToTable("R4UReleaseSets");
                });

            modelBuilder.Entity("Montage.RebirthForYou.Tools.CLI.Entities.R4UCard", b =>
                {
                    b.HasOne("Montage.RebirthForYou.Tools.CLI.Entities.R4UCard", "NonFoil")
                        .WithMany("Alternates")
                        .HasForeignKey("NonFoilSerial");

                    b.HasOne("R4UReleaseSet", "Set")
                        .WithMany("Cards")
                        .HasForeignKey("SetReleaseID");

                    b.OwnsOne("Montage.RebirthForYou.Tools.CLI.Entities.MultiLanguageString", "Name", b1 =>
                        {
                            b1.Property<string>("R4UCardSerial")
                                .HasColumnType("TEXT");

                            b1.Property<string>("EN")
                                .HasColumnType("TEXT");

                            b1.Property<string>("JP")
                                .HasColumnType("TEXT");

                            b1.HasKey("R4UCardSerial");

                            b1.ToTable("R4UCards");

                            b1.WithOwner()
                                .HasForeignKey("R4UCardSerial");
                        });

                    b.OwnsMany("Montage.RebirthForYou.Tools.CLI.Entities.MultiLanguageString", "Traits", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasAnnotation("Sqlite:Autoincrement", true);

                            b1.Property<string>("EN")
                                .HasColumnType("TEXT");

                            b1.Property<string>("JP")
                                .HasColumnType("TEXT");

                            b1.Property<string>("R4UCardSerial")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("R4UCardSerial");

                            b1.ToTable("R4UCards_Traits");

                            b1.WithOwner()
                                .HasForeignKey("R4UCardSerial");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
